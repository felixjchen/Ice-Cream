{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n\nvar SideNavItems = function SideNavItems(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      isSideNavExpanded = _ref.isSideNavExpanded;\n  var className = cx([\"\".concat(prefix, \"--side-nav__items\")], customClassName);\n  var childrenWithExpandedState = React.Children.map(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isSideNavExpanded: isSideNavExpanded\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: className\n  }, childrenWithExpandedState);\n};\n\nSideNavItems.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool\n};\nexport default SideNavItems;","map":null,"metadata":{},"sourceType":"module"}